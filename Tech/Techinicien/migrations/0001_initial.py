# Generated by Django 5.2.4 on 2025-08-02 13:22

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_categorie', models.CharField(max_length=100, unique=True)),
                ('description_categorie', models.TextField(blank=True, null=True)),
                ('couleur_affichage', models.CharField(default='#000000', max_length=7)),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
            },
        ),
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_departement', models.CharField(max_length=100, unique=True)),
                ('responsable', models.CharField(blank=True, max_length=200, null=True)),
                ('localisation', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Département',
                'verbose_name_plural': 'Départements',
            },
        ),
        migrations.CreateModel(
            name='Equipement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_modele', models.CharField(max_length=255)),
                ('type_equipement', models.CharField(max_length=100)),
                ('numero_serie', models.CharField(max_length=100, unique=True)),
                ('statut_equipement', models.CharField(choices=[('fonctionnel', 'Fonctionnel'), ('en panne', 'En panne'), ('en maintenance', 'En maintenance')], default='fonctionnel', max_length=20)),
                ('date_achat', models.DateField()),
                ('garantie', models.DateField(blank=True, null=True)),
                ('departement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='equipements', to='Techinicien.departement')),
            ],
            options={
                'verbose_name': 'Équipement',
                'verbose_name_plural': 'Équipements',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('role', models.CharField(choices=[('employe', 'Employé'), ('technicien', 'Techinicien'), ('admin', 'Administrateur')], default='employe', max_length=20)),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('inactif', 'Inactif')], default='actif', max_length=10)),
                ('departement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='utilisateurs', to='Techinicien.departement')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('statut_ticket', models.CharField(choices=[('ouvert', 'Ouvert'), ('en cours', 'En cours'), ('resolu', 'Résolu'), ('ferme', 'Fermé'), ('annule', 'Annulé')], default='ouvert', max_length=20)),
                ('priorite', models.CharField(choices=[('faible', 'Faible'), ('normal', 'Normal'), ('urgent', 'Urgent'), ('critique', 'Critique')], default='normal', max_length=10)),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tickets', to='Techinicien.categorie')),
                ('equipement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='Techinicien.equipement')),
                ('technicien_assigne', models.ForeignKey(blank=True, limit_choices_to={'role': 'technicien'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets_assignes', to=settings.AUTH_USER_MODEL)),
                ('utilisateur_createur', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tickets_crees', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_notification', models.CharField(choices=[('email', 'Email'), ('interne', 'Notification Interne')], default='interne', max_length=10)),
                ('sujet', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('date_envoi', models.DateTimeField(auto_now_add=True)),
                ('statut_notification', models.CharField(choices=[('envoye', 'Envoyé'), ('lu', 'Lu'), ('echec', "Échec d'envoi")], default='envoye', max_length=10)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='Techinicien.ticket')),
                ('destinataire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-date_envoi'],
            },
        ),
        migrations.CreateModel(
            name='Commentaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_commentaire', models.DateTimeField(auto_now_add=True)),
                ('contenu', models.TextField()),
                ('type_action', models.CharField(choices=[('creation', 'Création'), ('assignation', 'Assignation'), ('changement_statut', 'Changement de statut'), ('ajout_commentaire', 'Commentaire'), ('resolution', 'Résolution'), ('fermeture', 'Fermeture'), ('instruction', 'Instruction de guidage'), ('question_technicien', 'Question du technicien'), ('reponse_employe', "Réponse de l'employé"), ('confirmation_etape', "Confirmation d'étape"), ('demande_capture', "Demande de capture d'écran"), ('guidage_debut', 'Début du guidage à distance'), ('guidage_fin', 'Fin du guidage à distance')], default='ajout_commentaire', max_length=25)),
                ('est_instruction', models.BooleanField(default=False, help_text="Indique si c'est une instruction à suivre")),
                ('numero_etape', models.PositiveIntegerField(blank=True, help_text="Numéro de l'étape", null=True)),
                ('attendre_confirmation', models.BooleanField(default=False, help_text='Le technicien attend une confirmation')),
                ('est_confirme', models.BooleanField(default=False, help_text="Instruction confirmée par l'employé")),
                ('date_confirmation', models.DateTimeField(blank=True, null=True)),
                ('piece_jointe', models.FileField(blank=True, null=True, upload_to='commentaires/%Y/%m/')),
                ('commentaire_parent', models.ForeignKey(blank=True, help_text='Commentaire auquel celui-ci répond', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reponses', to='Techinicien.commentaire')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentaires', to='Techinicien.ticket')),
                ('utilisateur_auteur', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='commentaires', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Commentaire',
                'verbose_name_plural': 'Commentaires',
                'ordering': ['date_commentaire'],
            },
        ),
    ]
